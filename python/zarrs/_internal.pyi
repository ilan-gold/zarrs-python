# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import typing
from enum import Enum, auto

import numpy
import numpy.typing

class CodecPipelineImpl:
    def __new__(
        cls,
        metadata,
        *,
        validate_checksums=...,
        store_empty_chunks=...,
        chunk_concurrent_minimum=...,
        chunk_concurrent_maximum=...,
        num_threads=...,
    ): ...
    def retrieve_chunks_and_apply_index(
        self,
        chunk_descriptions: typing.Sequence[
            tuple[Raw, typing.Sequence[slice], typing.Sequence[slice]]
        ],
        value: numpy.NDArray[typing.Any],
    ) -> None: ...
    def retrieve_chunks(
        self, chunk_descriptions: typing.Sequence[Raw]
    ) -> list[numpy.typing.NDArray[numpy.uint8]]: ...
    def store_chunks_with_indices(
        self,
        chunk_descriptions: typing.Sequence[
            tuple[Raw, typing.Sequence[slice], typing.Sequence[slice]]
        ],
        value: numpy.NDArray[typing.Any],
    ) -> None: ...

class FilesystemStoreConfig:
    root: str

class HttpStoreConfig:
    endpoint: str

class Raw:
    def __new__(
        cls,
        store: StoreConfig,
        path: str,
        chunk_shape: typing.Sequence[int],
        dtype: str,
        fill_value: typing.Sequence[int],
    ): ...
    ...

class StoreConfig(Enum):
    Filesystem = auto()
    Http = auto()
